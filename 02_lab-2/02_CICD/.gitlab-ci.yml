image: docker:stable

variables:
  DOCKER_DRIVER: overlay2

services:
  - name: docker:dind
    alias: docker

stages:
  - Build image
  - Test image
  - Push to Docker Hub
  - Deploy App

docker build:
  stage: Build image
  script:
  - docker info
  - docker build -t student-list-api ./simple_api
  - docker save student-list-api > student-list-api.tar
  artifacts:
    paths:
      - student-list-api.tar


docker test:
  stage: Test image
  before_script:
  - apk add --update curl python3 && rm -rf /var/cahe/apk/*
  script:
  - docker load < student-list-api.tar
  - docker rm -vf student-list-api || echo "container already deleted"
  - docker run -d --name=student-list-api -p 5000:5000 student-list-api
  - docker cp ${PWD}/simple_api/student_age.json student-list-api:/data/student_age.json
  - sleep 5
  - if [ $CI_RUNNER_TAGS == \[\"docker-runner\"\] ] ; then app=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' student-list-api); echo "use local runner"; else app=docker; echo "use gitlab saas runner"; fi
  - if [ "$(curl -u toto:python -X GET http://$app:5000/pozos/api/v1.0/get_student_ages | python3 -c "import sys, json; print(json.load(sys.stdin)['student_ages']['bob'])")" = "13" ] && [ "$(curl -u toto:python -X GET http://$app:5000/pozos/api/v1.0/get_student_ages | python3 -c "import sys, json; print(json.load(sys.stdin)['student_ages']['alice'])")" = "12" ]; then echo "test OK"; docker rm -vf student-list-api; exit 0; else echo "test KO";docker rm -vf student-list-api; exit 1; fi

docker push:
  stage: Push to Docker Hub
  only:
  - main
  script:
  - docker load < student-list-api.tar
  - docker tag student-list-api $DOCKER_USERNAME/student-list-api:${CI_COMMIT_REF_NAME}
  - docker tag student-list-api $DOCKER_USERNAME/student-list-api:${CI_COMMIT_SHORT_SHA}
  - docker tag student-list-api $DOCKER_USERNAME/student-list-api:latest
  - echo $DOCKER_PASSWORD | docker login -u$DOCKER_USERNAME --password-stdin
  - docker push $DOCKER_USERNAME/student-list-api:${CI_COMMIT_REF_NAME}
  - docker push $DOCKER_USERNAME/student-list-api:${CI_COMMIT_SHORT_SHA}
  - docker push $DOCKER_USERNAME/student-list-api:latest


docker deploy:
  stage: Deploy App
  environment:
    name: prod
    url: $NGORK_HTTP_URL
  before_script:
  - apk add --update sshpass openssh curl
  - rm student-list-api.tar
  script:
  - SSH_HOST=$(echo "$NGROK_SSH_URL" | awk -F/ '{print $3}' | sed 's/:.*//')
  - SSH_PORT=$(echo "$NGROK_SSH_URL" | awk -F/ '{print $3}' | cut -f2 -d ':')
  - sshpass -p "$SSH_PASSWORD" ssh -o 'StrictHostKeyChecking=no' -p $SSH_PORT $SSH_LOGIN@$SSH_HOST '(mkdir -p ~/prod)'
  - sshpass -p "$SSH_PASSWORD" scp -o 'StrictHostKeyChecking=no' -P $SSH_PORT -r ./* $SSH_LOGIN@$SSH_HOST:/home/vagrant/prod/
  - sshpass -p "$SSH_PASSWORD" ssh -o 'StrictHostKeyChecking=no' -p $SSH_PORT $SSH_LOGIN@$SSH_HOST '(cd ~/prod; docker compose down -v && docker compose pull && docker compose up -d)'
  - curl "$NGORK_HTTP_URL" | grep -q "Student Checking App"